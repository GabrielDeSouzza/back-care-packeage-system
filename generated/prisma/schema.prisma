// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String            @id @default(uuid())
  name                     String            @db.VarChar(80)
  email                    String            @unique @db.VarChar(80)
  password                 String
  createdAt                DateTime
  modified_at              DateTime          @default(now())
  PersonCreatedBy          Person[]          @relation("CreatedBy")
  PersonUpdatedBy          Person[]          @relation("UpdatedBy")
  ChildCreatedBy           Child[]           @relation("CreatedBy")
  ChildUpdatedBy           Child[]           @relation("UpdatedBy")
  TypeCarePackageCreatedBy TypeCarePackage[] @relation("CreatedBy")
  TypeCarePackageUpdatedBy TypeCarePackage[] @relation("UpdatedBy")
  CarePackageItemCreatedBy CarePackageItem[] @relation("CreatedBy")
  CarePackageItemUpdatedBy CarePackageItem[] @relation("UpdatedBy")
  CarePackageCreatedBy     CarePackage[]     @relation("CreatedBy")
  CarePackageUpdatedBy     CarePackage[]     @relation("UpdatedBy")
}

model Person {
  id          String        @id @default(uuid())
  name        String
  lastName    String
  document    Int           @unique
  hasChild    Boolean
  dateBirth   DateTime      @db.Date
  gender      String
  createdBy   String
  updatedBy   String
  createdAt   DateTime
  updatedAt   DateTime
  CreatedBy   User          @relation("CreatedBy", fields: [createdBy], references: [id])
  UpdatedBy   User          @relation("UpdatedBy", fields: [updatedBy], references: [id])
  Child       Child[]
  CarePackage CarePackage[]
}

model Child {
  id                String   @id @default(uuid())
  name              String
  lastName          String
  dateBirh          DateTime
  createdBy         String
  updatedBy         String
  createdAt         DateTime
  updatedAt         DateTime
  responsibleId     String
  PersonResponsible Person   @relation(fields: [responsibleId], references: [id])
  CreatedBy         User     @relation("CreatedBy", fields: [createdBy], references: [id])
  UpdatedBy         User     @relation("UpdatedBy", fields: [updatedBy], references: [id])
}

model TypeCarePackage {
  id          String        @id @default(uuid())
  name        String        @unique
  createdBy   String
  updatedBy   String
  createdAt   DateTime
  updatedAt   DateTime
  CreatedBy   User          @relation("CreatedBy", fields: [createdBy], references: [id])
  UpdatedBy   User          @relation("UpdatedBy", fields: [updatedBy], references: [id])
  CarePackage CarePackage[]
}

model CarePackageItem {
  id        String   @id @default(uuid())
  name      String   @unique
  createdBy String
  updatedBy String
  createdAt DateTime
  updatedAt DateTime
  CreatedBy User     @relation("CreatedBy", fields: [createdBy], references: [id])
  UpdatedBy User     @relation("UpdatedBy", fields: [updatedBy], references: [id])
}

model CarePackage {
  id                    String              @id @default(uuid())
  numberControl         Int                 @default(autoincrement())
  typeCarePackageId     String
  TypeCarePackage       TypeCarePackage     @relation(fields: [typeCarePackageId], references: [id])
  personId              String
  Person                Person              @relation(fields: [personId], references: [id])
  carePackageScheduleId String
  CarePackageSchedule   CarePackageSchedule @relation(fields: [carePackageScheduleId], references: [id])
  createdBy             String
  updatedBy             String
  createdAt             DateTime
  updatedAt             DateTime
  CreatedBy             User                @relation("CreatedBy", fields: [createdBy], references: [id])
  UpdatedBy             User                @relation("UpdatedBy", fields: [updatedBy], references: [id])
}

model CarePackageSchedule {
  id               String        @id @default(uuid())
  deliveryDate     DateTime      @unique @db.Date
  carePackageCount Int
  CarePackage      CarePackage[]
}
